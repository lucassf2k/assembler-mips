// Serve como se fosse um banco de dados para filtrar. Como tamb√©m para pegar os valores 
// certos dos opcode e funct
const instructions = [
   { sll: { type: 'R', op: 0, rs: 0, rt: 0, rd: 0, shamt: 0, funct: 0 } },
   { srl: { type: 'R', op: 0, rs: 0, rt: 0, rd: 0, shamt: 0, funct: 2 } },
   { jr: { type: 'R', op: 0, rs: 0, rt: 0, rd: 0, shamt: 0, funct: 8 } },
   { mfhi: { type: 'R', op: 0, rs: 0, rt: 0, rd: 0, shamt: 0, funct: 16 } },
   { mflo: { type: 'R', op: 0, rs: 0, rt: 0, rd: 0, shamt: 0, funct: 18 }},
   { mult: { type: 'R', op: 0, rs: 0, rt: 0, rd: 0, shamt: 0, funct: 24 } },
   { multu: { type: 'R', op: 0, rs: 0, rt: 0, rd: 0, shamt: 0, funct: 25 } },
   { div: { type: 'R', op: 0, rs: 0, rt: 0, rd: 0, shamt: 0, funct: 26 } },
   { divu: { type: 'R', op: 0, rs: 0, rt: 0, rd: 0, shamt: 0, funct: 27 } },
   { add: { type: 'R', op: 0, rs: 0, rt: 0, rd: 0, shamt: 0, funct: 32 } },
   { addu: { type: 'R', op: 0, rs: 0, rt: 0, rd: 0, shamt: 0, funct: 33 } },
   { sub: { type: 'R', op: 0, rs: 0, rt: 0, rd: 0, shamt: 0, funct: 34 } },
   { subu: { type: 'R', op: 0, rs: 0, rt: 0, rd: 0, shamt: 0, funct: 35 } },
   { and: { type: 'R', op: 0, rs: 0, rt: 0, rd: 0, shamt: 0, funct: 36 } },
   { or: { type: 'R', op: 0, rs: 0, rt: 0, rd: 0, shamt: 0, funct: 37 } },
   { slt: { type: 'R', op: 0, rs: 0, rt: 0, rd: 0, shamt: 0, funct: 42 } },
   { sltu: { type: 'R', op: 0, rs: 0, rt: 0, rd: 0, shamt: 0, funct: 43 } },
   { mul: { type: 'R', op: 28, rs: 0, rt: 0, rd: 0, shamt: 0, funct: 2 } },
   { beq: { type: 'I', op: 4, rs: 0, rt: 0, immediate: 0 } },
   { bne: { type: 'I', op: 5, rs: 0, rt: 0, immediate: 0 } },
   { addi: { type: 'I', op: 8, rs: 0, rt: 0, immediate: 0 } },
   { addiu: { type: 'I', op: 9, rs: 0, rt: 0, immediate: 0 } },
   { slti: { type: 'I', op: 10, rs: 0, rt: 0, immediate: 0 } },
   { sltiu: { type: 'I', op: 11, rs: 0, rt: 0, immediate: 0 } },
   { andi: { type: 'I', op: 12, rs: 0, rt: 0, immediate: 0 } },
   { ori: { type: 'I', op: 13, rs: 0, rt: 0, immediate: 0 } },
   { lui: { type: 'I', op: 15, rs: 0, rt: 0, immediate: 0 } },
   { lw: { type: 'I', op: 35, rs: 0, rt: 0, immediate: 0 } },
   { sw: { type: 'I', op: 43, rs: 0, rt: 0, immediate: 0 } },
   { j: { type: 'J', op: 2, address: 0 } },
   { jal: { type: 'J', op: 3, address: 0 } },
];

// serve como um banco de dados para pegar os valores correspondentes aos registradores
const registerTable = {
   $t0: 8,
   $t1: 9,
   $t2: 10,
   $t3: 11,
   $t4: 12,
   $t5: 13,
   $t6: 14,
   $t7: 15,
   $s0: 16,
   $s1: 17,
   $s2: 18,
   $s3: 19,
   $s4: 20,
   $s5: 21,
   $s6: 22,
   $s7: 23,
};

export { instructions, registerTable };